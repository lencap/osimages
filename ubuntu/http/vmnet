#!/bin/bash
# /usr/local/bin/vmnet
# Set up network and hostname. See https://github.com/lencap/vm

osDist=$(hostnamectl | awk '/Operating System/ {print $3}' | tr 'A-Z' 'a-z')
vmName=$(sudo VBoxControl guestproperty get '/vm/name' | awk '/^Value/ {print $2}')
vmIP=$(sudo VBoxControl guestproperty get '/vm/ip' | awk '/^Value/ {print $2}')
echo "==> OS        = [$osDist]"
echo "==> Hostname  = [$vmName]"
echo "==> IPAddress = [$vmIP]"
[[ -z "$vmName" ]] && echo "Error. VBoxControl guestproperty get '/vm/name' is empty." && exit 1
[[ -z "$vmIP" ]] && echo "Error. VBoxControl guestproperty get '/vm/ip' is empty." && exit 1

if [[ "$osDist" == "centos" ]]; then
    echo "==> Configuring CentOS network and hostname"
    sudo systemctl stop network

    nic0=eth0 ; nic1=eth1
    nic0File=/etc/sysconfig/network-scripts/ifcfg-$nic0
    nic1File=/etc/sysconfig/network-scripts/ifcfg-$nic1

    echo "==> VirtualBox Adapter 1 [NAT]: Configuring $nic0 as DHCP client"
    echo "DEVICE=\"$nic0\"" > $ nic0File          # Create new file
    echo "BOOTPROTO=dhcp" >> $ nic0File
    echo "ONBOOT=yes" >> $ nic0File

    echo "==> VirtualBox Adapter 2 [HostOnly]: Configuring $nic1 with static IP $vmIP"
    echo "DEVICE=\"$nic0\"" > $ nic0File          # Create new file
    echo "BOOTPROTO=static" >> $ nic0File
    echo "ONBOOT=yes" >> $ nic0File
    echo "IPADDR=\"$vmIP\"" >> $ nic0File
    echo "NETMASK=\"255.255.255.0\"" >> $ nic0File

    sudo hostnamectl set-hostname $vmName
    sudo systemctl start network
elif [[ "$osDist" == "ubuntu" ]]; then
    echo "==> Configuring Ubuntu network and hostname"
    sudo systemctl stop networking
    
    nic0=enp0s3 ; nic1=enp0s8
    nic0File=/etc/network/interfaces
    nic1File=/etc/network/interfaces.d/20-${nic1}.cfg

    echo "==> VirtualBox Adapter 1 [NAT]: Configuring $nic0 as DHCP client"
    #echo "auto $nic0" > $nic0File                # Create new file
    #echo "iface $nic0 inet dhcp" >> $nic0File 

    echo "==> VirtualBox Adapter 2 [HostOnly]: Configuring $nic1 with static IP $vmIP"
    echo "auto $nic1" > $nic1File                 # Create new file
    echo "iface $nic1 inet static" >> $nic1File 
    echo "address $vmIP" >> $nic1File
    echo "netmask 255.255.255.0" >> $nic1File
    #gtWay=${vmIP%.*}.1
    #echo "gateway $gtWay" >> $nic1File
    #echo "dns-nameservers 8.8.8.8 4.4.2.2" >> $nic1File

    sudo hostnamectl set-hostname $vmName
    sudo systemctl start networking
else
    echo "==> Unsupported OS. Giving up on network and hostname setup."
    exit 1
fi
echo "==> Done"
exit 0
