#!/bin/bash
# /usr/local/bin/vmnet
# Set up networking for VMs managed by https://github.com/lencap/{vm|vmc} utilities
# Set this file to run on boot with systemd:
#   cp vmnet.service /etc/systemd/system/vmnet.service
#   systemd enable vmnet.service

osDist=$(hostnamectl | awk '/Operating System/ {print $3}' | tr 'A-Z' 'a-z')
vmName=$(sudo VBoxControl guestproperty get '/vm/name' | awk '/^Value/ {print $2}')
vmIP=$(sudo VBoxControl guestproperty get '/vm/ip' | awk '/^Value/ {print $2}')
netType=$(sudo VBoxControl guestproperty get '/vm/nettype' | awk '/^Value/ {print $2}')
[[ "$netType" != "bri" ]] && netType="ho"   # Default to HostOnly no matter what
echo "==> OS        = [$osDist]"
echo "==> Hostname  = [$vmName]"
echo "==> IPAddress = [$vmIP]"
echo "==> NetType   = [$netType]"
[[ -z "$vmName" ]] && echo "VBoxControl guestproperty get '/vm/name' is empty." && exit 1
[[ -z "$vmIP" ]] && echo "VBoxControl guestproperty get '/vm/ip' is empty." && exit 1

gateWay=${vmIP%.*}.1   # For Bridge networking, we'll assume 1st IP is both gateway and DNS

if [[ "$osDist" == "centos" ]]; then
    echo "==> Configuring CentOS network"
    sudo systemctl stop NetworkManager
    sudo systemctl disable NetworkManager
    sudo systemctl stop network
    for n in $(ip l | awk '/^[0-9]/ {print $2}') ; do
        if [[ "$n" == "eth0:" ]]; then
            ip link set eth0 down && ip link set eth0 name enp0s3  # Force new name
            sudo rm -f /etc/sysconfig/network-scripts/ifcfg-eth0   # Cleanup
        fi
        if [[ "$n" == "eth1:" ]]; then
            ip link set eth1 down && ip link set eth1 name enp0s8
            sudo rm -f /etc/sysconfig/network-scripts/ifcfg-eth1
        fi
    done
    nic0=enp0s3 ; nic1=enp0s8
    nic0File=/etc/sysconfig/network-scripts/ifcfg-$nic0
    nic1File=/etc/sysconfig/network-scripts/ifcfg-$nic1
    if [[ "$netType" == "bri" ]]; then
        echo "==> Configuring $nic0 as DISABLED, and $nic1 with static IP $vmIP in Bridged mode"
        ip link set $nic0 down
        sudo rm -f $nic0File

        echo "DEVICE=\"$nic1\"" > $nic1File
        echo "BOOTPROTO=\"static\"" >> $nic1File
        echo "ONBOOT=\"yes\"" >> $nic1File
        echo "NM_CONTROLLED=\"no\"" >> $nic1File
        echo "IPADDR=\"$vmIP\"" >> $nic1File
        echo "NETMASK=\"255.255.255.0\"" >> $nic1File
        MAC=$(cat /sys/class/net/$nic1/address)
        echo "HWADDR=\"$MAC\"" >> $nic1File
        echo "GATEWAY=\"$gateWay\"" >> $nic1File
        echo "DNS1=\"$gateWay\"" >> $nic1File
    else
        echo "==> Configuring $nic0 as DHCP client, and $nic1 with static IP $vmIP in HostOnly mode"
        # DHCP should have already configured NIC0
        echo "DEVICE=\"$nic0\"" > $nic0File
        echo "BOOTPROTO=\"dhcp\"" >> $nic0File
        echo "ONBOOT=\"yes\"" >> $nic0File
        echo "NM_CONTROLLED=\"no\"" >> $nic0File
        MAC=$(cat /sys/class/net/$nic0/address)
        echo "HWADDR=\"$MAC\"" >> $nic0File

        echo "DEVICE=\"$nic1\"" > $nic1File
        echo "BOOTPROTO=\"static\"" >> $nic1File
        echo "ONBOOT=\"yes\"" >> $nic1File
        echo "NM_CONTROLLED=\"no\"" >> $nic1File
        echo "IPADDR=\"$vmIP\"" >> $nic1File
        echo "NETMASK=\"255.255.255.0\"" >> $nic1File
        MAC=$(cat /sys/class/net/$nic1/address)
        echo "HWADDR=\"$MAC\"" >> $nic1File
    fi
    sudo systemctl start network
elif [[ "$osDist" == "ubuntu" ]]; then
    echo "==> Configuring Ubuntu network"
    nic0=enp0s3 ; nic1=enp0s8
    osRel=$(hostnamectl | awk '/Operating System/ {print $4}') ; osRel=${osRel%%.*}
    [[ "$osRel" == "16" ]] && echo "FATAL: Ubuntu v16 is not supported. Only v18 and above." && exit 1
    sudo systemctl stop systemd-networkd
    cfg=/etc/netplan/01-netcfg.yaml
    if [[ "$netType" == "bri" ]]; then
        echo "==> Configuring $nic0 as DISABLED, and $nic1 with static IP $vmIP in Bridged mode"
        sudo echo "network:" > $cfg
        sudo echo "  version: 2" >> $cfg
        sudo echo "  renderer: networkd" >> $cfg
        sudo echo "  ethernets:" >> $cfg
        sudo echo "    $nic1:" >> $cfg
        sudo echo "      addresses: [$vmIP/24]" >> $cfg
        sudo echo "      gateway4: $gateWay" >> $cfg
        sudo echo "      nameservers:" >> $cfg
        sudo echo "        addresses: [$gateWay]" >> $cfg
    else
        echo "==> Configuring $nic0 as DHCP client, and $nic1 with static IP $vmIP in HostOnly mode"
        sudo echo "network:" > $cfg
        sudo echo "  version: 2" >> $cfg
        sudo echo "  renderer: networkd" >> $cfg
        sudo echo "  ethernets:" >> $cfg
        sudo echo "    $nic0:" >> $cfg
        sudo echo "      dhcp4: yes" >> $cfg
        sudo echo "    $nic1:" >> $cfg
        sudo echo "      addresses: [$vmIP/24]" >> $cfg
    fi
    sudo systemctl start systemd-networkd
    sudo netplan apply
else
    echo "==> Unsupported OS. Giving up on network and hostname set up."
    exit 1
fi

echo "==> Updating hostname"
sudo hostnamectl set-hostname $vmName
sed -i "/^127\.0\.1\.1.*/d" /etc/hosts
echo "127.0.1.1       $vmName" >> /etc/hosts

echo "==> Done"
exit 0
